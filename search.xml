<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>linux知识</title>
      <link href="/2021/06/19/linux/"/>
      <url>/2021/06/19/linux/</url>
      
        <content type="html"><![CDATA[<h2 id="linux基础命令"><a href="#linux基础命令" class="headerlink" title="linux基础命令"></a>linux基础命令</h2><ul><li>ls -a -l</li><li>cd  / ..</li><li>cat </li><li>vi</li><li>tail -f -n</li><li>touch</li><li>mkdir</li><li>rm -rf -r -f</li></ul><h2 id="linux结构"><a href="#linux结构" class="headerlink" title="linux结构"></a>linux结构</h2>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ajax</title>
      <link href="/2021/06/09/ajax/"/>
      <url>/2021/06/09/ajax/</url>
      
        <content type="html"><![CDATA[<h2 id="ajax"><a href="#ajax" class="headerlink" title="ajax"></a>ajax</h2><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><ul><li><p>创建Ajax对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr=<span class="keyword">new</span> XMLHttpRequest();</span><br></pre></td></tr></table></figure></li><li><p>告诉ajax请求地址及请求方式</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.open(<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;http://www.example.com&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>发送请求</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.send();</span><br></pre></td></tr></table></figure></li><li><p>获取相应数据</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xhr.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>将JSON字符串响应为json对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">JSON</span>.parse()</span><br></pre></td></tr></table></figure></li></ul><h3 id="请求参数传递"><a href="#请求参数传递" class="headerlink" title="请求参数传递"></a>请求参数传递</h3><ul><li><p>GET请求</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.open(<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;http://www.example.com?name=zhangshan&amp;age=20&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>POST请求</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xhr.setRequestHeader(<span class="string">&#x27;Content-Type&#x27;</span>,<span class="string">&#x27;application/x-wwww-form-urlencoded&#x27;</span>)</span><br><span class="line">xhr.send(<span class="string">&#x27;name=zhang&amp;age=20&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ul><h3 id="请求参数格式"><a href="#请求参数格式" class="headerlink" title="请求参数格式"></a>请求参数格式</h3><ol><li><p>application/x-www-form-urlencoded</p><blockquote><p>‘name=zhang&amp;age=20’</p></blockquote></li><li><p>application/json</p><blockquote><p><strong>{<strong>name</strong>:</strong> ‘zhangsan’<strong>,</strong> age**:** ‘20’<strong>,</strong> sex**:** ‘男’<strong>}</strong></p></blockquote></li><li><p>在请求头中指定 Content-Type 属性的值是 application/json，告诉服务器端当前请求参数的格式是 json。</p></li><li><p>JSON**.<strong>stringify</strong>()** // 将json对象转换为json字符串</p></li></ol><blockquote><p>注意：get 请求是不能提交 json 对象数据格式的，传统网站的表单提交也是不支持 json 对象数据格式的。</p></blockquote><h3 id="Content-Type"><a href="#Content-Type" class="headerlink" title="Content-Type"></a>Content-Type</h3><p><em>Content-Type用于设置请求和响应中正文数据传递的格式，response响应头中的Content-Type属性可设置为application/json; charset=utf-8，意思是传递一个json格式的字符串，如果是text/html，则为普通html字符串，如果是text/plain,则为文本类型</em></p><h3 id="ajax的封装"><a href="#ajax的封装" class="headerlink" title="ajax的封装"></a>ajax的封装</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line"><span class="comment">// 存储的是默认值</span></span><br><span class="line"><span class="keyword">var</span> defaults = &#123;</span><br><span class="line"><span class="attr">type</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line"><span class="attr">url</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="attr">data</span>: &#123;&#125;,</span><br><span class="line"><span class="attr">header</span>: &#123;</span><br><span class="line"><span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line"><span class="attr">error</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用options对象中的属性覆盖defaults对象中的属性</span></span><br><span class="line"><span class="built_in">Object</span>.assign(defaults, options);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建ajax对象</span></span><br><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"><span class="comment">// 拼接请求参数的变量</span></span><br><span class="line"><span class="keyword">var</span> params = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="comment">// 循环用户传递进来的对象格式参数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> attr <span class="keyword">in</span> defaults.data) &#123;</span><br><span class="line"><span class="comment">// 将参数转换为字符串格式</span></span><br><span class="line">params += attr + <span class="string">&#x27;=&#x27;</span> + defaults.data[attr] + <span class="string">&#x27;&amp;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 将参数最后面的&amp;截取掉 </span></span><br><span class="line"><span class="comment">// 将截取的结果重新赋值给params变量</span></span><br><span class="line">params = params.substr(<span class="number">0</span>, params.length - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断请求方式</span></span><br><span class="line"><span class="keyword">if</span> (defaults.type == <span class="string">&#x27;get&#x27;</span>) &#123;</span><br><span class="line">defaults.url = defaults.url + <span class="string">&#x27;?&#x27;</span> + params;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">name: &#x27;zhangsan&#x27;,</span></span><br><span class="line"><span class="comment">age: 20</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">name=zhangsan&amp;age=20</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置ajax对象</span></span><br><span class="line">xhr.open(defaults.type, defaults.url);</span><br><span class="line"><span class="comment">// 如果请求方式为post</span></span><br><span class="line"><span class="keyword">if</span> (defaults.type == <span class="string">&#x27;post&#x27;</span>) &#123;</span><br><span class="line"><span class="comment">// 用户希望的向服务器端传递的请求参数的类型</span></span><br><span class="line"><span class="keyword">var</span> contentType = defaults.header[<span class="string">&#x27;Content-Type&#x27;</span>]</span><br><span class="line"><span class="comment">// 设置请求参数格式的类型</span></span><br><span class="line">xhr.setRequestHeader(<span class="string">&#x27;Content-Type&#x27;</span>, contentType);</span><br><span class="line"><span class="comment">// 判断用户希望的请求参数格式的类型</span></span><br><span class="line"><span class="comment">// 如果类型为json</span></span><br><span class="line"><span class="keyword">if</span> (contentType == <span class="string">&#x27;application/json&#x27;</span>) &#123;</span><br><span class="line"><span class="comment">// 向服务器端传递json数据格式的参数</span></span><br><span class="line">xhr.send(<span class="built_in">JSON</span>.stringify(defaults.data))</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 向服务器端传递普通类型的请求参数</span></span><br><span class="line">xhr.send(params);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 发送请求</span></span><br><span class="line">xhr.send();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 监听xhr对象下面的onload事件</span></span><br><span class="line"><span class="comment">// 当xhr对象接收完响应数据后触发</span></span><br><span class="line">xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// xhr.getResponseHeader()</span></span><br><span class="line"><span class="comment">// 获取响应头中的数据</span></span><br><span class="line"><span class="keyword">var</span> contentType = xhr.getResponseHeader(<span class="string">&#x27;Content-Type&#x27;</span>);</span><br><span class="line"><span class="comment">// 服务器端返回的数据</span></span><br><span class="line"><span class="keyword">var</span> responseText = xhr.responseText;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果响应类型中包含applicaition/json</span></span><br><span class="line"><span class="keyword">if</span> (contentType.includes(<span class="string">&#x27;application/json&#x27;</span>)) &#123;</span><br><span class="line"><span class="comment">// 将json字符串转换为json对象</span></span><br><span class="line">responseText = <span class="built_in">JSON</span>.parse(responseText)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当http状态码等于200的时候</span></span><br><span class="line"><span class="keyword">if</span> (xhr.status == <span class="number">200</span>) &#123;</span><br><span class="line"><span class="comment">// 请求成功 调用处理成功情况的函数</span></span><br><span class="line">defaults.success(responseText, xhr);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 请求失败 调用处理失败情况的函数</span></span><br><span class="line">defaults.error(responseText, xhr);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ajax(&#123;</span><br><span class="line"><span class="attr">type</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line"><span class="comment">// 请求地址</span></span><br><span class="line"><span class="attr">url</span>: <span class="string">&#x27;http://localhost:3000/responseData&#x27;</span>,</span><br><span class="line"><span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;这里是success函数&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">请求参数要考虑的问题</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1.请求参数位置的问题</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">将请求参数传递到ajax函数内部, 在函数内部根据请求方式的不同将请求参数放置在不同的位置</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">get 放在请求地址的后面</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">post 放在send方法中</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.请求参数格式的问题</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">application/x-www-form-urlencoded</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">参数名称=参数值&amp;参数名称=参数值</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">name=zhangsan&amp;age=20</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">application/json</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#123;name: &#x27;zhangsan&#x27;, age: 20&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1.传递对象数据类型对于函数的调用者更加友好</span></span><br><span class="line"><span class="comment">2.在函数内部对象数据类型转换为字符串数据类型更加方便</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="ajax-1"><a href="#ajax-1" class="headerlink" title="$.ajax()"></a>$.ajax()</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><blockquote><p>作用：发送Ajax请求。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">     <span class="attr">type</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">     <span class="attr">url</span>: <span class="string">&#x27;http://www.example.com&#x27;</span>,</span><br><span class="line">     <span class="attr">data</span>: &#123; <span class="attr">name</span>: <span class="string">&#x27;zhangsan&#x27;</span>, <span class="attr">age</span>: <span class="string">&#x27;20&#x27;</span> &#125;,</span><br><span class="line">     <span class="attr">contentType</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">     <span class="attr">beforeSend</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; </span><br><span class="line">         <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">     &#125;,</span><br><span class="line">     <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;&#125;,</span><br><span class="line">     <span class="attr">error</span>: <span class="function"><span class="keyword">function</span> (<span class="params">xhr</span>) </span>&#123;&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">     <span class="attr">data</span>: <span class="string">&#x27;name=zhangsan&amp;age=20&#x27;</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">contentType</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">JSON</span>.stringify(&#123;<span class="attr">name</span>: <span class="string">&#x27;zhangsan&#x27;</span>, <span class="attr">age</span>: <span class="string">&#x27;20&#x27;</span>&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>作用：发送jsonp请求</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://www.example.com&#x27;</span>,</span><br><span class="line">    <span class="comment">// 指定当前发送jsonp请求</span></span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&#x27;jsonp&#x27;</span>,</span><br><span class="line">    <span class="comment">// 修改callback参数名称</span></span><br><span class="line">    <span class="attr">jsonp</span>: <span class="string">&#x27;cb&#x27;</span>,</span><br><span class="line">    <span class="comment">// 指定函数名称</span></span><br><span class="line">    <span class="attr">jsonCallback</span>: <span class="string">&#x27;fnName&#x27;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;&#125; </span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="serialize方法"><a href="#serialize方法" class="headerlink" title="serialize方法"></a>serialize方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> params = $(<span class="string">&#x27;#form&#x27;</span>).serialize();</span><br><span class="line"><span class="comment">// name=zhangsan&amp;age=30</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="get-与-post"><a href="#get-与-post" class="headerlink" title="$.get()与$.post()"></a>$.get()与$.post()</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$.get(<span class="string">&#x27;http://www.example.com&#x27;</span>, &#123;<span class="attr">name</span>: <span class="string">&#x27;zhangsan&#x27;</span>, <span class="attr">age</span>: <span class="number">30</span>&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;&#125;) $.post(<span class="string">&#x27;http://www.example.com&#x27;</span>, &#123;<span class="attr">name</span>: <span class="string">&#x27;lisi&#x27;</span>, <span class="attr">age</span>: <span class="number">22</span>&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/05/20/hello-world/"/>
      <url>/2021/05/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
